@page "/ChampionshipDetails/{ChampionshipGuid:guid}"

@using SimRacingManager.Core
@using SimRacingManager.Data
@using SimRacingManager.Enumerations

<MudText Typo="Typo.h5" Align="Align.Center" Class="pb-4">@_newChampionship.Name</MudText>

<MudTable Items="@_newChampionship.Drivers">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Drivers</MudText>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>Name</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
    </RowTemplate>
</MudTable>

<br/>

<MudTable Items="@_newChampionship.Tracks">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Tracks</MudText>
    </ToolBarContent>
    <ColGroup>
        <col />
        <col style="width: 1%" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh Style="text-align: center">Status</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        <MudTd DataLabel="Status"><MudChip T="string" Label="true" Color="@context.StatusColour">@context.Status</MudChip></MudTd>
    </RowTemplate>
</MudTable>

@code {
    [Parameter]
    public Guid ChampionshipGuid { get; set; }
    
    private Championship _newChampionship; // Doesn't matter if this is null, it should always be assigned an instance.
    
    protected override void OnInitialized()
    {
        foreach (var championship in Championships.ChampionshipsList)
        {
            if (championship.Guid == ChampionshipGuid)
            {
                _newChampionship = championship;
            }
        }

        foreach (var tracks in _newChampionship.Tracks)
        {
            tracks.Initialize(); // Probably not the best place to do this, but it should do for now.
        }
    }
}