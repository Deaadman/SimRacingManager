@page "/"

@using SimRacingManager.Core
@using SimRacingManager.Data
@using SimRacingManager.Enumerations

@inject NavigationManager Navigation

@rendermode InteractiveServer

@* TODO: Add each year in dynamically as well *@
<MudTable T="Championship" Items="@Championships.ChampionshipsList" Filter="Filter" Hover="true" RowClass="cursor-pointer" OnRowClick="RowClickEvent">
    <ToolBarContent>
        <MudText Typo="Typo.h6">2025 Season</MudText>
    </ToolBarContent>
    <ColGroup>
        <col />
        <col />
        <col />
        <col />
        <col />
        <col style="width: 1%" />
    </ColGroup>
    <HeaderContent>
        <MudTh>Name</MudTh>
        <MudTh>Next</MudTh>
        <MudTh>Races</MudTh>
        <MudTh>Period</MudTh>
        <MudTh>Winner</MudTh>
        <MudTh Style="text-align: center">Status</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd DataLabel="Name">@context.Name</MudTd>
        @if (context.Next == null)
        {
            <MudTd DataLabel="Next"></MudTd>
        }
        else
        {
            <MudTd DataLabel="Next">@context.Next.Name in <MudChip T="DateTime" Label="true" Color="Color.Primary">@context.TimeRemainingNextTrack Days</MudChip></MudTd>
        }
        <MudTd DataLabel="Races">@context.TracksCompleted / @context.Tracks.Count</MudTd>
        <MudTd DataLabel="Period">@context.CombinedDates</MudTd>
        @if (context.Winner == null)
        {
            <MudTd DataLabel="Winner"></MudTd>
        }
        else
        {
            <MudTd DataLabel="Winner">@context.Winner.Name</MudTd>
        }
        <MudTd DataLabel="Status"><MudChip T="string" Label="true" Color="@context.StatusColour">@context.Status</MudChip></MudTd>
    </RowTemplate>
</MudTable>

@code {
    private Dictionary<Status, Color> _statusColourDictionary = new();
    
    protected override void OnInitialized()
    {
        _statusColourDictionary.Clear();
        
        _statusColourDictionary.Add(Status.Completed, Color.Error);
        _statusColourDictionary.Add(Status.Ongoing, Color.Success);
        _statusColourDictionary.Add(Status.Upcoming, Color.Warning);

        foreach (var championship in Championships.ChampionshipsList)
        {
            championship.TracksCompletedCount();
            championship.CombineDates();
            
            foreach (var colour in _statusColourDictionary)
            {
                if (colour.Key == championship.Status)
                {
                    championship.StatusColour = colour.Value;
                }
            }

            foreach (var track in championship.Tracks)
            {
                track.Initialize();
            }
            
            championship.NextRace();
        }
    }
    
    private bool Filter(Championship championship)
    {
        if (championship.Year == 2025)
        {
            return true;
        }

        return false;
    }
    
    private void RowClickEvent(TableRowClickEventArgs<Championship> tableRowClickEventArgs)
    {
        Navigation.NavigateTo($"ChampionshipDetails/{tableRowClickEventArgs.Item.Guid}");
    }
}